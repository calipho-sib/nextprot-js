/*! nextprot 2015-06-04 */
!function(a){"use strict";void 0===a.Nextprot&&(a.Nextprot={}),function(){var b="https://api.nextprot.org/entry/",c="https://api.nextprot.org/sparql",d="?output=json",e="PREFIX :<http://nextprot.org/rdf#> PREFIX annotation:<http://nextprot.org/rdf/annotation/> PREFIX context:<http://nextprot.org/rdf/context/> PREFIX cv:<http://nextprot.org/rdf/terminology/> PREFIX db:<http://nextprot.org/rdf/db/> PREFIX dc:<http://purl.org/dc/elements/1.1/> PREFIX dcterms:<http://purl.org/dc/terms/> PREFIX entry:<http://nextprot.org/rdf/entry/> PREFIX evidence:<http://nextprot.org/rdf/evidence/> PREFIX foaf:<http://xmlns.com/foaf/0.1/> PREFIX gene:<http://nextprot.org/rdf/gene/> PREFIX identifier:<http://nextprot.org/rdf/identifier/> PREFIX isoform:<http://nextprot.org/rdf/isoform/> PREFIX mo:<http://purl.org/ontology/mo/> PREFIX ov:<http://open.vocab.org/terms/> PREFIX owl:<http://www.w3.org/2002/07/owl#> PREFIX publication:<http://nextprot.org/rdf/publication/> PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> PREFIX sim:<http://purl.org/ontology/similarity/> PREFIX source:<http://nextprot.org/rdf/source/> PREFIX term:<http://nextprot.org/rdf/terminology/> PREFIX xref:<http://nextprot.org/rdf/xref/> PREFIX xsd:<http://www.w3.org/2001/XMLSchema#> ",f=null,g=null,h=function(a,b){if(f=a,g=b,!a)throw"Please provide some application name  ex:  new Nextprot.Client('demo applicaiton for visualizing peptides', clientInformation);";if(!b)throw"Please provide some client information ex:  new Nextprot.Client(applicationName, 'Calipho SIB at Geneva');"},i=function(a){a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var b=new RegExp("[\\?&]"+a+"=([^&#]*)"),c=b.exec(location.search);return null===c?"":decodeURIComponent(c[1].replace(/\+/g," "))};h.prototype.getEntryName=function(){return i("nxentry")||"NX_P01308"};var j=function(a){return"NX_"!==a.substring(0,3)&&(a="NX_"+a),a},k=function(a,c){return new Promise(function(d,e){var h=new XMLHttpRequest,i=b+a+"/"+c+".json?clientInfo="+g+"&applicationName="+f;h.open("GET",i),h.onload=function(){200==h.status?d(JSON.parse(h.responseText)):e(Error(h.status))},h.onerror=function(){e(Error("Network Error"))},h.send()})};h.prototype.executeSparql=function(a){var b=e+a,h=c+d+"&query="+encodeURIComponent(b)+"&clientInfo="+g+"&applicationName="+f;return Promise.resolve($.getJSON(h)).then(function(a){return a})},h.prototype.getProteinOverview=function(a){return k(j(a||this.getEntryName()),"overview").then(function(a){return a.entry.overview})},h.prototype.getProteinSequence=function(a){return k(j(a||this.getEntryName()),"isoform").then(function(a){return a.entry.isoforms})},h.prototype.getSecondaryStructure=function(a){return k(j(a||this.getEntryName()),"secondary-structure").then(function(a){return a.entry.annotations})},h.prototype.getMatureProtein=function(a){return k(j(a||this.getEntryName()),"mature-protein").then(function(a){return a.entry.annotations})},h.prototype.getPeptide=function(a){return k(j(a||this.getEntryName()),"peptide").then(function(a){return a.entry.peptideMappings})},h.prototype.getSrmPeptide=function(a){return k(j(a||this.getEntryName()),"srm-peptide").then(function(a){return a.entry.srmPeptideMappings})},"undefined"!=typeof exports&&(exports.Client=h),a.Nextprot.Client=h}()}(this);var NXUtils={checkIsoformMatch:function(a,b){return a.endsWith("-"+b)},getSequenceForIsoform:function(a,b){var c=null;return a.forEach("number"==typeof b?function(a){a.uniqueName.endsWith("-"+b)&&(console.log("returning"+a.sequence),c=a.sequence)}:function(a){return a.uniqueName===b?a.sequence:void 0}),c},convertMappingsToIsoformMap:function(a){var b={};return a.forEach(function(a){for(var c in a.targetingIsoformsMap)if(console.log(c),a.targetingIsoformsMap.hasOwnProperty(c)){var d=a.targetingIsoformsMap[c].firstPosition,e=a.targetingIsoformsMap[c].lastPosition,f=a.evidences.map(function(a){return a.assignedBy}).filter(function(a,b,c){return c.indexOf(a)==b});b[c]||(b[c]=[]),b[c].push({start:d,end:e,length:e-d+1,description:a.description,cvTermAccessionCode:a.cvTermAccessionCode,evidence:f,evidenceLength:f.length})}}),b}},NXViewerUtils={convertNXAnnotations:function(a,b){return a.map(function(a){return{x:a.start,y:a.end,id:a.start.toString()+"_"+a.end.toString(),category:b,description:a.description}})}};